@use "./palette" as _;

$blur-radius: 24px;
$xfast-animation-duration: 0.1s;
$fast-animation-duration: 0.2s;
$default-animation-duration: 0.4s;
$slow-animation-duration: 0.5s;
$vslow-animation-duration: 0.6s;

html {
    padding: 0;
    margin: 0;
    text-align: justify;
}

.icon {
    font-family: "Material Symbols", monospace;
    font-variation-settings:
        "FILL" 1,
        "wght" 400,
        "GRAD" 0,
        "opsz" 20;
    user-select: none;
}

.markdown {
    code {
        padding: 2px 6px;
        border-radius: 8px;
        background-color: var(--light-border-color);
        font-family: monospace;
        // font-size: 14px;
        word-wrap: break-word;
    }

    a {
        color: var(--tieba-theme-fore);
    }

    a:hover {
        text-decoration: underline;
    }

    h2 {
        margin: 20px 0 8px;
        font-size: 24px;
    }

    h3 {
        margin: 16px 0 6px;
    }

    ul {
        margin: 6px 0;
    }

    li {
        margin: 6px 0 6px 22px;
        list-style: disc;
    }

    li::marker {
        color: var(--minimal-fore);
    }

    blockquote {
        margin: 20px 16px;
        color: var(--minimal-fore);
    }
}

select {
    padding: 1px 8px;
    border: 1px solid var(--border-color);
    border-radius: 8px;
    cursor: pointer;
}

option {
    cursor: pointer;
}

option:checked {
    background-color: var(--tieba-theme-color);
    color: var(--default-background);
}

.toggle-button {
    border: none !important;
    border-radius: 36px;
    background-color: unset !important;
}

.toggle-button.toggle-off {
    color: var(--minimal-fore);
    font-variation-settings: "FILL" 0;
}

.toggle-button.toggle-off::after {
    content: "toggle_off";
}

.toggle-button.toggle-on::after {
    content: "toggle_on";
}

.toggle-button.toggle-on {
    color: var(--tieba-theme-color);
    font-variation-settings: "FILL" 1;
}

.toggle-button.toggle-off:hover {
    color: var(--default-hover);
}

.toggle-button.toggle-off:active {
    color: var(--default-active);
}

.toggle-button.toggle-on:hover {
    color: var(tieba-theme-hover);
}

.toggle-button.toggle-on:active {
    color: var(--tieba-theme-active);
}

a {
    color: unset;
    text-decoration: none;
}

div,
p {
    margin: 0;
}

.level-green {
    background-color: _.$levelGreenBack;
    color: _.$levelGreenFore;
}

.level-blue {
    background-color: _.$levelBlueBack;
    color: _.$levelBlueFore;
}

.level-yellow {
    background-color: _.$levelYellowBack;
    color: _.$levelYellowFore;
}

.level-orange {
    background-color: _.$levelOrangeBack;
    color: _.$levelOrangeFore;
}

.remove-default {
    font-size: 16px;
    line-height: initial;

    .content {
        min-height: unset;
        background: unset;
    }

    code {
        display: unset;
        width: unset;
        height: unset;
    }

    .content,
    .foot {
        width: unset;
    }

    button {
        color: unset;
    }
}

@mixin transition-prototype($type, $time) {
    transition: $type $time;
}

@mixin slow-transition($type) {
    @include transition-prototype($type, 0.8s);
}

@mixin default-transition($type) {
    @include transition-prototype($type, 0.4s);
}

@mixin fast-transition($type) {
    @include transition-prototype($type, 0.2s);
}

@keyframes fade-in-keyframe {
    0% {
        opacity: 0;
    }

    100% {
        opacity: 1;
    }
}

@keyframes fade-out-keyframe {
    0% {
        opacity: 1;
    }

    100% {
        opacity: 0;
    }
}

@mixin fade-in($time) {
    animation: fade-in-keyframe $time;
}

@mixin fade-out($time) {
    animation: fade-out-keyframe $time;
}

@mixin blur-effect($radius: $blur-radius) {
    backdrop-filter: blur($radius);

    @media (prefers-color-scheme: dark) {
        backdrop-filter: blur($radius) brightness(0.8);
    }
}

@keyframes dialog-in {
    0% {
        opacity: 0;
        transform: scale(1.2);
    }

    100% {
        opacity: 1;
        transform: scale(1);
    }
}
